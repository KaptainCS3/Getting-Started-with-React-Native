 <View>
          <View style={[styles.card, styles.elevation]}>
            {/* Title input field */}
            <Text style={{marginBottom: 8}}>Title</Text>
            <TextInput
              placeholder="title"
              keyboardType="default"
              style={{
                padding: 10,
                borderColor: '#999',
                borderWidth: 1,
                borderRadius: 10,
                paddingLeft: 16,
              }}
            />
            {/* Description input field */}
            <Text style={{marginVertical: 15}}>Description</Text>
            <TextInput
              placeholder="description"
              keyboardType="default"
              multiline={true} // Set multiline prop to true
              numberOfLines={4}
              style={{
                padding: 10,
                borderColor: '#999',
                borderWidth: 1,
                borderRadius: 10,
                paddingLeft: 16,
              }}
            />
            <View
              style={{flexDirection: 'row', justifyContent: 'space-between'}}>
              {/* Phone input field*/}
              <View style={{width: '45%'}}>
                <Text style={{marginVertical: 15}}>Phone</Text>
                <TextInput
                  placeholder="phone"
                  keyboardType="phone-pad"
                  style={{
                    padding: 10,
                    borderColor: '#999',
                    borderWidth: 1,
                    borderRadius: 10,
                    paddingLeft: 16,
                  }}
                />
                <Text style={{marginVertical: 15}}>Phone</Text>
                <TextInput
                  placeholder="phone"
                  keyboardType="phone-pad"
                  style={{
                    padding: 10,
                    borderColor: '#999',
                    borderWidth: 1,
                    borderRadius: 10,
                    paddingLeft: 16,
                  }}
                />
              </View>
              <View style={{width: '45%'}}>
                <Text style={{marginVertical: 15}}>Phone</Text>
                <TextInput
                  placeholder="phone"
                  keyboardType="phone-pad"
                  style={{
                    padding: 10,
                    borderColor: '#999',
                    borderWidth: 1,
                    borderRadius: 10,
                    paddingLeft: 16,
                  }}
                />
                <Text style={{marginVertical: 15}}>Phone</Text>
                <TextInput
                  placeholder="phone"
                  keyboardType="phone-pad"
                  style={{
                    padding: 10,
                    borderColor: '#999',
                    borderWidth: 1,
                    borderRadius: 10,
                    paddingLeft: 16,
                  }}
                />
              </View>
            </View>
            <DefaultButton />
          </View>
        </View>



        return (
    <Formik
      initialValues={initialValues}
      onSubmit={values => {
        Alert.alert(JSON.stringify(values));
        dispatch(createEvent(values));
      }}>
      {({handleChange, handleBlur, handleSubmit, values}) => (
        <>
          <View style={styles.container}>
            <View
              style={{
                justifyContent: 'center',
                alignItems: 'center',
              }}>
              <Text
                style={{
                  fontSize: 24,
                  //   fontStyle: 'italic',
                  fontFamily: 'Poppins',
                }}>
                {eventText}
                {/* <Text style={{color: '#1E319D'}}> */}
                {/* </Text> */}
              </Text>
            </View>
            <View>
              <View style={[styles.card, styles.elevation]}>
                {/* Title input field */}
                <Text style={{marginBottom: 8}}>Title</Text>
                <TextInput
                  placeholder="title"
                  keyboardType="default"
                  onChangeText={handleChange('title')}
                  onBlur={handleBlur('title')}
                  value={values.title}
                  style={{
                    padding: 10,
                    borderColor: '#999',
                    borderWidth: 1,
                    borderRadius: 10,
                    paddingLeft: 16,
                  }}
                />
                {/* Description input field */}
                <Text style={{marginVertical: 10}}>Description</Text>
                <TextInput
                  placeholder="description"
                  keyboardType="default"
                  onChangeText={handleChange('description')}
                  onBlur={handleBlur('description')}
                  value={values.description}
                  multiline={true} // Set multiline prop to true
                  numberOfLines={4}
                  style={{
                    paddingBottom: 30,
                    borderColor: '#999',
                    borderWidth: 1,
                    borderRadius: 10,
                    paddingLeft: 16,
                  }}
                />
                <View>
                  <Button title="Open" onPress={() => setOpen(true)} />
                  <DatePicker
                    modal
                    open={open}
                    date={date}
                    onConfirm={date => {
                      setOpen(false);
                      setDate(date);
                    }}
                    onCancel={() => {
                      setOpen(false);
                    }}
                  />
                </View>

                <View style={{marginTop: 25}}>
                  <DefaultButton handleSubmit={handleSubmit} />
                </View>
              </View>
            </View>
          </View>
        </>
      )}
    </Formik>
  );







import React, {useState} from 'react';
import {
  View,
  Text,
  StyleSheet,
  TextInput,
  Alert,
  TouchableOpacity,
  Button,
} from 'react-native';
import DefaultButton from '../button/default-button/DefaultButton';
import {createEvent} from '../../features/eventSlice/event.slice';
import {useAppDispatch, useAppSelector} from '../../hooks/hook';
import eventType from '../../types/eventSlice';
import {Formik} from 'formik';
import DatePicker from 'react-native-date-picker';
interface Props {
  eventText: string;
}

interface Prop {
  title: string;
  description: string;
  startTime: object | null | Date;
  endTime: object | null | Date;
  startDate: object | null | Date | string | number;
  endDate: object | null | Date | string | number;
}

const initialValues: Prop = {
  title: '',
  description: '',
  startTime: new Date(),
  endTime: new Date(),
  startDate: new Date(),
  endDate: new Date(),
};
const CreateEvent = ({eventText}: Props) => {
  const dispatch = useAppDispatch();
  const eventData = useAppSelector(state => state.eventSlice);
  const [date, setDate] = useState(new Date());
  const [open, setOpen] = useState(false);
  const {loading, error, data} = eventData;
  console.warn(eventData);
  return (
    <Formik
      initialValues={initialValues}
      onSubmit={values => {
        Alert.alert(JSON.stringify(values));
        dispatch(createEvent(values));
      }}>
      {({handleChange, handleBlur, handleSubmit, values}) => (
        <>
          <View style={styles.container}>
            <View
              style={{
                justifyContent: 'center',
                alignItems: 'center',
              }}>
              <Text
                style={{
                  fontSize: 24,
                  //   fontStyle: 'italic',
                  fontFamily: 'Poppins',
                }}>
                {eventText}
                {/* <Text style={{color: '#1E319D'}}> */}
                {/* </Text> */}
              </Text>
            </View>
            <View>
              <View style={[styles.card, styles.elevation]}>
                {/* Title input field */}
                <Text style={{marginBottom: 8}}>Title</Text>
                <TextInput
                  placeholder="title"
                  keyboardType="default"
                  onChangeText={handleChange('title')}
                  onBlur={handleBlur('title')}
                  value={values.title}
                  style={{
                    padding: 10,
                    borderColor: '#999',
                    borderWidth: 1,
                    borderRadius: 10,
                    paddingLeft: 16,
                  }}
                />
                {/* Description input field */}
                <Text style={{marginVertical: 10}}>Description</Text>
                <TextInput
                  placeholder="description"
                  keyboardType="default"
                  onChangeText={handleChange('description')}
                  onBlur={handleBlur('description')}
                  value={values.description}
                  multiline={true} // Set multiline prop to true
                  numberOfLines={4}
                  style={{
                    paddingBottom: 30,
                    borderColor: '#999',
                    borderWidth: 1,
                    borderRadius: 10,
                    paddingLeft: 16,
                  }}
                />
                {/* <View>
                  <Button title="Open" onPress={() => setOpen(true)} />
                  <DatePicker
                    modal
                    open={open}
                    date={date}
                    onConfirm={date => {
                      setOpen(false);
                      setDate(date);
                    }}
                    onCancel={() => {
                      setOpen(false);
                    }}
                  />
                </View> */}
                <View
                  style={{
                    flexDirection: 'row',
                    justifyContent: 'space-between',
                  }}>
                  {/* Phone input field*/}
                  <View style={{width: '45%'}}>
                    <Text style={{marginVertical: 15}}>Phone</Text>
                    <TextInput
                      placeholder="phone"
                      keyboardType="phone-pad"
                      style={{
                        padding: 10,
                        borderColor: '#999',
                        borderWidth: 1,
                        borderRadius: 10,
                        paddingLeft: 16,
                      }}
                    />
                    <Text style={{marginVertical: 15}}>Phone</Text>
                    <TextInput
                      placeholder="phone"
                      keyboardType="phone-pad"
                      style={{
                        padding: 10,
                        borderColor: '#999',
                        borderWidth: 1,
                        borderRadius: 10,
                        paddingLeft: 16,
                      }}
                    />
                  </View>
                  <View style={{width: '45%'}}>
                    <Text style={{marginVertical: 15}}>Phone</Text>
                    <TextInput
                      placeholder="phone"
                      keyboardType="phone-pad"
                      style={{
                        padding: 10,
                        borderColor: '#999',
                        borderWidth: 1,
                        borderRadius: 10,
                        paddingLeft: 16,
                      }}
                    />
                    <Text style={{marginVertical: 15}}>Phone</Text>
                    <TextInput
                      placeholder="phone"
                      keyboardType="phone-pad"
                      style={{
                        padding: 10,
                        borderColor: '#999',
                        borderWidth: 1,
                        borderRadius: 10,
                        paddingLeft: 16,
                      }}
                    />
                  </View>
                </View>
                <View style={{marginTop: 25}}>
                  <DefaultButton handleSubmit={handleSubmit} />
                </View>
              </View>
            </View>
          </View>
        </>
      )}
    </Formik>
  );
};

export default CreateEvent;

const styles = StyleSheet.create({
  container: {
    width: '100%',
    // paddingHorizontal: 25,
  },
  heading: {
    fontSize: 16,
    fontWeight: '600',
    marginBottom: 13,
  },
  card: {
    height: '100%',
    backgroundColor: 'white',
    borderTopRightRadius: 35,
    borderTopLeftRadius: 35,
    paddingBottom: 90,
    paddingTop: 30,
    paddingHorizontal: 25,
    width: '100%',
    marginVertical: 10,
  },
  elevation: {
    elevation: 20,
    shadowColor: '#00020',
  },
});


import React, {useState} from 'react';
import {
  View,
  Text,
  StyleSheet,
  TextInput,
  Alert,
  TouchableOpacity,
  Button,
  KeyboardAvoidingView,
} from 'react-native';
import DefaultButton from '../button/default-button/DefaultButton';
import {createEvent} from '../../features/eventSlice/event.slice';
import {useAppDispatch, useAppSelector} from '../../hooks/hook';
import eventType from '../../types/eventSlice';
import {Formik} from 'formik';
import * as yup from 'yup';
import DatePicker from 'react-native-date-picker';
interface Props {
  eventText: string;
}

const initialValues: eventType = {
  title: '',
  description: '',
  startTime: new Date(),
  endTime: new Date(),
  startDate: new Date(),
  endDate: new Date(),
};
const CreateEvent = ({eventText}: Props) => {
  const createEventSchema = yup.object().shape({
    title: yup
      .string()
      .matches(/(\w.+\s).+/, 'Enter at least 2 names')
      .required('name is required'),
    description: yup.string().min(15).required('description is required'),
  });
  const dispatch = useAppDispatch();
  const eventData = useAppSelector(state => state.eventSlice);
  const {loading, error, data} = eventData;
  console.warn(eventData);
  return (
    <Formik
      initialValues={initialValues}
      validationSchema={createEventSchema}
      onSubmit={values => {
        Alert.alert(JSON.stringify(values));
        dispatch(createEvent(values));
      }}>
      {({handleChange, handleSubmit, values, errors, isValid, setFieldTouched}) => (
        <>
          <KeyboardAvoidingView behavior="padding" style={styles.container}>
            <View>
              <View
                style={{
                  justifyContent: 'center',
                  alignItems: 'center',
                }}>
                <Text
                  style={{
                    fontSize: 24,
                    //   fontStyle: 'italic',
                    fontFamily: 'Poppins',
                  }}>
                  {eventText}
                  {/* <Text style={{color: '#1E319D'}}> */}
                  {/* </Text> */}
                </Text>
              </View>
              <View>
                <View style={[styles.card, styles.elevation]}>
                  {/* Title input field */}
                  <Text style={{marginBottom: 8}}>Title</Text>
                  <TextInput
                    placeholder="title"
                    keyboardType="default"
                    onChangeText={handleChange('title')}
                    onBlur={() => setFieldTouched('title')}
                    value={values.title}
                    style={{
                      padding: 10,
                      borderColor: '#999',
                      borderWidth: 1,
                      borderRadius: 10,
                      paddingLeft: 16,
                    }}
                  />

                  {errors.title && (
                    <Text style={{fontSize: 15, color: 'red', paddingTop: 5}}>
                      {errors.title}
                    </Text>
                  )}

                  {/* Description input field */}
                  <Text style={{marginVertical: 10}}>Description</Text>
                  <TextInput
                    placeholder="description"
                    keyboardType="default"
                    onChangeText={handleChange('description')}
                    onBlur={() => setFieldTouched('description')}
                    value={values.description}
                    multiline={true} // Set multiline prop to true
                    numberOfLines={4}
                    style={{
                      paddingBottom: 30,
                      borderColor: '#999',
                      borderWidth: 1,
                      borderRadius: 10,
                      paddingLeft: 16,
                    }}
                  />

                  {errors.description && (
                    <Text style={{fontSize: 15, color: 'red', paddingTop: 5}}>
                      {errors.description}
                    </Text>
                  )}

                  <View
                    style={{
                      flexDirection: 'row',
                      justifyContent: 'space-between',
                    }}>
                    {/* Phone input field*/}
                    <View style={{width: '45%'}}>
                      <Text style={{marginVertical: 15}}>Phone</Text>
                      <TextInput
                        placeholder="phone"
                        keyboardType="phone-pad"
                        style={{
                          padding: 10,
                          borderColor: '#999',
                          borderWidth: 1,
                          borderRadius: 10,
                          paddingLeft: 16,
                        }}
                      />
                      <Text style={{marginVertical: 15}}>Phone</Text>
                      <TextInput
                        placeholder="phone"
                        keyboardType="phone-pad"
                        style={{
                          padding: 10,
                          borderColor: '#999',
                          borderWidth: 1,
                          borderRadius: 10,
                          paddingLeft: 16,
                        }}
                      />
                    </View>
                    <View style={{width: '45%'}}>
                      <Text style={{marginVertical: 15}}>Phone</Text>
                      <TextInput
                        placeholder="phone"
                        keyboardType="phone-pad"
                        style={{
                          padding: 10,
                          borderColor: '#999',
                          borderWidth: 1,
                          borderRadius: 10,
                          paddingLeft: 16,
                        }}
                      />
                      <Text style={{marginVertical: 15}}>Phone</Text>
                      <TextInput
                        placeholder="phone"
                        keyboardType="phone-pad"
                        style={{
                          padding: 10,
                          borderColor: '#999',
                          borderWidth: 1,
                          borderRadius: 10,
                          paddingLeft: 16,
                        }}
                      />
                    </View>
                  </View>
                  <View style={{marginTop: 25}}>
                    <DefaultButton
                      handleSubmit={handleSubmit}
                      isValid={isValid}
                    />
                  </View>
                </View>
              </View>
            </View>
          </KeyboardAvoidingView>
        </>
      )}
    </Formik>
  );
};

export default CreateEvent;

const styles = StyleSheet.create({
  container: {
    width: '100%',
    // paddingHorizontal: 25,
  },
  heading: {
    fontSize: 16,
    fontWeight: '600',
    marginBottom: 13,
  },
  card: {
    height: '100%',
    backgroundColor: 'white',
    borderTopRightRadius: 35,
    borderTopLeftRadius: 35,
    paddingBottom: 90,
    paddingTop: 30,
    paddingHorizontal: 25,
    width: '100%',
    marginVertical: 10,
  },
  elevation: {
    elevation: 20,
    shadowColor: '#00020',
  },
});
